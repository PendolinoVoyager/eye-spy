searchState.loadedDescShard("scp_client", 0, "Contains the implementation of ScpClient\nSCP - Simple Chat Protocol A protocol using mDNS and …\nAccept incoming connection, or do nothing if no incoming …\nAttempt to make a connection with the provided settings\nAvailable audio encoding formats\nEvents that can be emitted to the thread to make it take …\nConnection ended for whatever reason. Sockets should be …\nConnection established. Sockets should be ready to receive …\nEvents used by the client to signify what happens inside …\nConnection failed - refused, busy or other\nPeer attempts to make a connection and waiting for …\nSettings used when attempting to make a connection to …\nRefuse incoming connection, or do nothing if no incoming …\nConvinient builder for ScpClient with preferences\nErrors that may arise when establishing a session fails. …\nConfiguration for an established chat session These are “…\nSet password required for the connection, making an …\nRemove the password for the socket connection, switching …\nAvailable video encoding formats\nPanics\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPanics\nByte structure: &lt;COMMAND(16bits)&gt;\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n#Panics Panics if the message cannot be constructed due to …")